[tox]
# The python environments to run the tests in
envlist = py310,py311,py312,py310-{base,matplotlib,phonopy_reader,brille,all},py310-minrequirements-linux
isolated_build = true
# Skip the execution of setup.py as we do it with the correct arg in commands_pre below
# skipsdist = True

[testenv]
changedir = tests_and_analysis/test
test_command = python run_tests.py --report
passenv = CC CC_LD LDFLAGS CPPFLAGS
install_command =
    python -m pip install -v \
        --force-reinstall \
        --upgrade \
        --upgrade-strategy eager \
        {opts} \
        {packages}

[testenv:{py310,py311,py312}]
extras =
    matplotlib
    phonopy_reader
    brille
deps =
    numpy
    -r{toxinidir}/tests_and_analysis/tox_requirements.txt
commands =
    {[testenv]test_command} --cov

# Test with no extras
[testenv:py310-base]
deps = {[testenv:py310]deps}
commands = {[testenv]test_command} --cov -m "not (phonopy_reader or matplotlib or brille)"

# Test with matplotlib extra only
[testenv:py310-matplotlib]
deps = {[testenv:py310]deps}
extras = matplotlib
commands = {[testenv]test_command} --cov -m "matplotlib and not multiple_extras"

# Test with phonopy_reader extra only
[testenv:py310-phonopy_reader]
deps = {[testenv:py310]deps}
extras = phonopy_reader
commands = {[testenv]test_command} --cov -m "phonopy_reader and not multiple_extras"

# Test with brille extra only
[testenv:py310-brille]
deps = {[testenv:py310]deps}
extras = brille
commands = {[testenv]test_command} --cov -m "brille and not multiple_extras"

# Run remaining tests that require multiple extras
[testenv:py310-all]
deps = {[testenv:py310]deps}
extras =
    phonopy_reader
    matplotlib
    brille
commands =
    {[testenv]test_command} --cov -m multiple_extras

[testenv:py310-minrequirements-linux]
whitelist_externals = rm
skipsdist = True
install_command =
    python -m pip install --upgrade pip --force-reinstall -v  {opts} {packages}
platform =
    linux: linux
deps =
    numpy==1.24.0
    -r{toxinidir}/tests_and_analysis/minimum_euphonic_requirements.txt
    -r{toxinidir}/tests_and_analysis/tox_requirements.txt
commands_pre =
    # Force rebuild of euphonic extension to avoid Numpy clash
    rm -rf {toxinidir}/build
    python -m pip install -v -r '{toxinidir}/tests_and_analysis/minimum_euphonic_requirements.txt' '{toxinidir}[test,matplotlib,phonopy_reader,brille]'
commands = {[testenv]test_command}
