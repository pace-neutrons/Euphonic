[tox]
requires = tox>=4
# The python environments to run the tests in
envlist = py310,py311,py312,py310-{base,matplotlib,phonopy-reader,brille,all,minrequirements-linux,no-c}
allowlist_externals = git

[testenv]
package = wheel
changedir = tests_and_analysis/test
test_command = python run_tests.py --report
passenv = CC_LD
install_command =
    python -m pip install -v \
        --force-reinstall \
        --upgrade \
        --upgrade-strategy eager \
        {opts} \
        {packages}
extras =
    test

[testenv:{py310,py311,py312}]
extras =
    {[testenv]extras}
    matplotlib
    phonopy-reader
    brille
commands = {[testenv]test_command} --cov

# Test with no extras
[testenv:py310-base]
extras = {[testenv]extras}
commands = {[testenv]test_command} --cov -m "not (phonopy-reader or matplotlib or brille)"

# Test with matplotlib extra only
[testenv:py310-matplotlib]
extras =
    {[testenv]extras}
    matplotlib
commands = {[testenv]test_command} --cov -m "matplotlib and not multiple_extras"

# Test with phonopy-reader extra only
[testenv:py310-phonopy-reader]
extras =
    {[testenv]extras}
    phonopy-reader
commands = {[testenv]test_command} --cov -m "phonopy-reader and not multiple_extras"

# Test with brille extra only
[testenv:py310-brille]
extras =
    {[testenv]extras}
    brille
commands = {[testenv]test_command} --cov -m "brille and not multiple_extras"

# Run remaining tests that require multiple extras
[testenv:py310-all]
extras =
    {[testenv]extras}
    matplotlib
    phonopy-reader
    brille
commands =
    {[testenv]test_command} --cov -m multiple_extras

[testenv:py310-no-c]
install_command = {[testenv]install_command} -Csetup-args="-Dpython_only=true"
platform =
    linux: linux
extras =
    {[testenv]extras}
    matplotlib
    phonopy-reader
    brille
commands = {[testenv]test_command} -m 'not c_extension'

[testenv:py310-minrequirements-linux]
skip_install = True
allowlist_externals = rm
install_command =
    python -m pip install --force-reinstall {opts} {packages}
platform =
    linux: linux
deps =
    numpy==1.24.0
    -r{toxinidir}/tests_and_analysis/tox_requirements.txt
commands_pre =
    python -m pip install --force-reinstall \
        -r{toxinidir}/tests_and_analysis/minimum_euphonic_requirements.txt
    python -m pip install --force-reinstall \
        -r{toxinidir}/tests_and_analysis/tox_requirements.txt
    # Force rebuild of euphonic extension to avoid Numpy clash
    rm -rf {toxinidir}/build
    python -m pip install '{toxinidir}[matplotlib,phonopy-reader,brille]'
commands = {[testenv]test_command}

[testenv:py310-minrequirements-mac]
whitelist_externals = rm
install_command =
    python -m pip install --force-reinstall {opts} {packages}
platform =
    macos: darwin
deps =
    numpy==1.24.0
    {[testenv:py310]deps}
commands_pre =
    python -m pip install --force-reinstall \
        -r{toxinidir}/tests_and_analysis/minimum_euphonic_requirements_mac.txt
    python -m pip install --force-reinstall \
        -r{toxinidir}/tests_and_analysis/tox_requirements.txt
    # Force rebuild of euphonic extension to avoid Numpy clash
    rm -rf {toxinidir}/build
    python -m pip install '{toxinidir}[matplotlib,phonopy-reader,brille]'
commands = {[testenv]test_command}
