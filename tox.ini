[tox]
requires = tox-conda
# The python environments to run the tests in
envlist = {py37,py38}-{linux,windows,macos},py36-{base,matplotlib,phonopy_reader,all},py36-brille-{linux,windows},py36-minrequirements-linux
# Skip the execution of setup.py as we do it with the correct arg in commands_pre below
skipsdist = True

[testenv]
platform =
    linux: linux
    windows: win32
    macos: darwin
changedir = tests_and_analysis/test
test_command = python run_tests.py --report

# Test with all optional extras (except brille on MacOS temporarily,
# as workaround for incompatible buggy OpenMP 13 which is bundled with
# Brille 0.5.7. This interferes with other modules too e.g. Pyyaml
# so don't even install Brille.)
[testenv:{py37,py38}-{linux,windows,macos}]
install_command =
    python -m pip install \
        --force-reinstall \
        --upgrade \
        --upgrade-strategy eager \
        {opts} \
        {packages}
deps =
    numpy
    -r{toxinidir}/tests_and_analysis/tox_requirements.txt
commands_pre =
    linux,windows: python -m pip install \
    linux,windows: --upgrade \
    linux,windows: --upgrade-strategy eager \
    linux,windows: '{toxinidir}[matplotlib,phonopy_reader,brille]'
    macos: python -m pip install \
    macos: --upgrade \
    macos: --upgrade-strategy eager \
    macos: '{toxinidir}[matplotlib,phonopy_reader]'
commands =
    linux,windows: {[testenv]test_command} --cov
    macos: {[testenv]test_command} --cov -m "not brille"

# Test with no extras
[testenv:py36-base]
install_command = {[testenv:py37-linux]install_command}
deps = {[testenv:py37-linux]deps}
commands_pre =
    python -m pip install \
        --upgrade \
        --upgrade-strategy eager \
        '{toxinidir}'
commands = {[testenv]test_command} --cov -m "not (phonopy_reader or matplotlib or brille)"

# Test with matplotlib extra only
[testenv:py36-matplotlib]
install_command = {[testenv:py37-linux]install_command}
deps = {[testenv:py37-linux]deps}
commands_pre =
    python -m pip install \
        --upgrade \
        --upgrade-strategy eager \
        '{toxinidir}[matplotlib]'
commands = {[testenv]test_command} --cov -m "matplotlib and not multiple_extras"

# Test with phonopy_reader extra only
[testenv:py36-phonopy_reader]
install_command = {[testenv:py37-linux]install_command}
deps = {[testenv:py37-linux]deps}
commands_pre =
    python -m pip install \
        --upgrade \
        --upgrade-strategy eager \
        '{toxinidir}[phonopy_reader]'
commands = {[testenv]test_command} --cov -m "phonopy_reader and not multiple_extras"

# Test with brille extra only (except on MacOS)
[testenv:py36-brille-{linux,windows}]
install_command = {[testenv:py37-linux]install_command}
deps = {[testenv:py37-linux]deps}
commands_pre =
    python -m pip install \
        --upgrade \
        --upgrade-strategy eager \
        '{toxinidir}[brille]'
commands = {[testenv]test_command} --cov -m "brille and not multiple_extras"

# Run remaining tests that require multiple extras
[testenv:py36-all]
install_command = {[testenv:py37-linux]install_command}
deps = {[testenv:py37-linux]deps}
commands_pre =
    python -m pip install \
        --upgrade \
        --upgrade-strategy eager \
        '{toxinidir}[phonopy_reader,matplotlib]'
commands =
    linux,windows: {[testenv]test_command} --cov -m multiple_extras
    macos: {[testenv]test_command} --cov -m "multiple_extras and not brille"

[testenv:py36-minrequirements-linux]
whitelist_externals = rm
install_command =
    python -m pip install --force-reinstall {opts} {packages}
deps =
    numpy==1.12.1
commands_pre =
    python -m pip install --force-reinstall \
        -r{toxinidir}/tests_and_analysis/minimum_euphonic_requirements.txt
    python -m pip install --force-reinstall \
        -r{toxinidir}/tests_and_analysis/tox_requirements.txt
# Force rebuild of euphonic extension to avoid Numpy clash
# (it still exists from py36 env)
    rm -rf build
    python -m pip install '{toxinidir}[matplotlib,phonopy_reader,brille]'
commands = {[testenv]test_command}
